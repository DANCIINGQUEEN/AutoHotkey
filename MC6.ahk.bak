#Persistent
SetBatchLines, -1  ; Improves script performance by not checking the script's line count during execution

; Modifier keys setup
^+!i::
^+!j::
^+!k::
^+!l::
    HandleMovement()
return

^+!u::MouseLeftClick()
^+!o::MouseRightClick()

global moveDuration := {}  ; Initialize duration for each direction
moveDuration.up := moveDuration.down := moveDuration.left := moveDuration.right := 0

HandleMovement() {
    static lastTime = 0
    ; Avoid processing too frequently
    if (A_TickCount - lastTime < 10)
        return
    lastTime := A_TickCount

    ; Determine direction and update duration
    x := y := baseSpeed := 5
    UpdateDuration("i", "up", y)
    UpdateDuration("k", "down", y)
    UpdateDuration("j", "left", x)
    UpdateDuration("l", "right", x)

    ; Move mouse
    if (x != 0 or y != 0)
        MouseMove, x, y, 0, R
}

; Update movement duration and adjust distance
UpdateDuration(key, dir, byref distance) {
    if (GetKeyState(key, "P")) {
        moveDuration[dir] += 10  ; Increase duration
        distance += floor(moveDuration[dir] / 50)  ; Increase speed based on duration
    } else {
        moveDuration[dir] := 0  ; Reset duration
    }
}

MouseLeftClick() {
    MouseClick, left
}

MouseRightClick() {
    MouseClick, right
}
